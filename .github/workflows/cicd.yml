name: cicd

on: [push]

jobs:
  cicd:
    runs-on: [self-hosted, Linux, x64]
    strategy:
      max-parallel: 1
      matrix:
        python-version: [python3]

    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      #- name: Check release is created on snappi-ixnetwork
      #  id: release_flag
      #  run: |
      #    echo "::set-output name=url::v$(${{matrix.python-version}} do.py get_version)"
      #    echo "${{ steps.release_flag.outputs.url }}"
      #- name: Install dependencies
      #  run: |
      #    rm -rf .env
      #    ${{matrix.python-version}} do.py setup
      #    ${{matrix.python-version}} do.py init
      - name: Download artifacts if release is not created on snappi-ixnetwork
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: 2411682
          repo: open-traffic-generator/models
          workflow_conclusion: success
          path: dist/
        #env:
        #  WHO_TO_TRUST: ${{ secrets.CI_TOKEN }}
        #if: steps.release_flag.outputs.url != 'true'
        #run: |
        #  curl -kLO -H "Authorization: token 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" https://api.github.com/repos/open-traffic-generator/models/actions/artifacts/199399325/zip
      #echo "${{ env.WHO_TO_TRUST }}"
      #"curl -kLO -H "Authorization: token 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" ${{ steps.release_flag.outputs.url }}"
      #run: |
      #  ${{matrix.python-version}} do.py test
      #- name: Get package version
      #  id: get_version
      #  run: |
      #    echo "::set-output name=version::v$(${{matrix.python-version}} do.py version)"
      #- name: Check tag for current version
      #  uses: mukunku/tag-exists-action@v1.0.0
      #  id: check_tag
      #  with:
      #    tag: ${{ steps.get_version.outputs.version }}
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- name: Create release and publish artifacts
      #  if: steps.check_tag.outputs.exists == 'false' && matrix.python-version == 'python38'
      #  uses: ncipollo/release-action@v1
      #  with:
      #    tag: ${{ steps.get_version.outputs.version }}
      #    token: ${{ secrets.GITHUB_TOKEN }}
